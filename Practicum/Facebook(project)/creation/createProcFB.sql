SET SCHEMA FN000@

CREATE PROCEDURE FN000.FACEBOOK_USER_INFO_SP
  (IN USER_ID_PARAM INTEGER)
RESULT SETS 3
BEGIN
  DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
    SELECT *
    FROM FN000.USERS AS U
    WHERE U.USER_ID = USER_ID_PARAM;
  DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR
    SELECT *
    FROM FN000.POSTS AS P
    WHERE P.POSTER_ID = USER_ID_PARAM;
  DECLARE C3 CURSOR WITH RETURN TO CLIENT FOR
    SELECT *
    FROM FN000.EVENTS AS E
    WHERE E.HOST_ID = USER_ID_PARAM;

  OPEN C1;
  OPEN C2;
  OPEN C3;
END@


CREATE PROCEDURE  FN000.GET_AVG_LIKES_PER_POST_SP
      (IN USER_ID_PARAM,
      OUT AVG_LIKES DEC(7,2))
LANGUAGE SQL
BEGIN
  DECLARE V_LIKES_COUNTER INTEGER DEFAULT 0;
  DECLARE V_USER_POSTS_COUNT INTEGER DEFAULT 0;
  DECLARE V_TOTAL_RECORDS INTEGER DEFAULT 0;
  DECLARE V_CURR_RECORD INTEGER DEFAULT 0;

  DECLARE C1 CURSOR FOR
    SELECT L.USER_ID
    FROM FN000.LIKES AS L, FN000.POSTS AS P
    WHERE L.POST_ID = P.POST_ID
      AND P.POSTER_ID = USER_ID_PARAM;

  DECLARE CONTINUE HANDLER FOR NOT FOUND
     SET AVG_LIKES = -1;

  SET AVG_LIKES = 0;

  SELECT COUNT(*) INTO V_USER_POSTS_COUNT FROM FN000.POSTS WHERE POSTER_ID = USER_ID_PARAM;

  SELECT COUNT(*) INTO V_TOTAL_RECORDS
    FROM FN000.LIKES AS L, FN000.POSTS AS P
    WHERE L.POST_ID = P.POST_ID
      AND P.POSTER_ID = USER_ID_PARAM;

  OPEN C1;
  WHILE V_TOTAL_RECORDS > 0 DO
    FETCH C1 INTO V_CURR_RECORD;
    SET V_LIKES_COUNTER = V_LIKES_COUNTER + 1;
    SET AVG_LIKES = V_USER_POSTS_COUNT / V_LIKES_COUNTER;
    SET V_TOTAL_RECORDS = V_TOTAL_RECORDS - 1;
  END WHILE;

END@